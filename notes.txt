
 -- Firebase --



firebase deploy --only hosting
firebase deploy --only functions



 {
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null"
  }
}

 -- Firebase Cloud Messaging --

A Real Curl example filled in:

Firebase Server Key: 
AAAA4BRpWD8:APA91bH9yM7xDd4XyQeeMNw9zZh58hYHuRGKBQ5xReRJ9M6drXbrk-TwOKF3S5lDDgHKz0g_BF02L0ESFfeDNff9cd75OxpoEO6DUsFJjR5HWZnjVqxh3rpfjw-PJXGfVR7GTOBk8sjS

Token for Pixel phone.
eghA8E9WrLA:APA91bFPKuWYMhZ5JZ5_UEUk6Odcbn8wDB-k9kH5nr2oN1gj5chRNodptIgGkuEIpXF7mf_As7hQZGL5ANIrKuHCIHSV2ArEllnlphAJ0qMaN3gz1axA29Ng_I-zk80SnRB5eRX9P1av

Token for desktop Chrome:
c-2nCgxrEAU:APA91bFE_-CToSYrFsSf_9JHwMJB9Z33vnuCg16kJz8EZz7Mx643SoUUtfnLnk9FvNDiQ4TgET_DQihA_vOKMlSqKaG3VziEwK4F_dtb_DVQjDP4oxSvUbB1bj5Pb57IgXnDVHuITnOn

curl -H "Content-Type: application/json" \
     -H "Authorization: key=AAAA4BRpWD8:APA91bH9yM7xDd4XyQeeMNw9zZh58hYHuRGKBQ5xReRJ9M6drXbrk-TwOKF3S5lDDgHKz0g_BF02L0ESFfeDNff9cd75OxpoEO6DUsFJjR5HWZnjVqxh3rpfjw-PJXGfVR7GTOBk8sjS" \
     -d '{
          "to": "fuZ_iI_jX3o:APA91bFUpYGju6QBR1V2mMhGV5J7HzQNw0qO-VJdl8ULJEfwz5_RCYghvAp9f9802OP4mH0l-2Y4JfPFxlS1eQbQXI_4E9XZwHOtCtf2X1EHjMDqy83afwfFfXjfUI_apWQuLp1fP75P",
          "notification": {
             "title": "My title text!",
             "body": "My body text!",
             "icon": "/images/polyn-msg.png",
             "click_action": "https://polyn-3c431.firebaseapp.com/"
           },
           "data": {
             "myData1": "First data",
             "myData2": "Second data"
          },
          "priority": 10
         }' \
     https://fcm.googleapis.com/fcm/send

------------------------------------------------------------------------

 -- Research Links -- 

https://css-tricks.com/the-difference-between-throttling-and-debouncing/

https://www.captaincodeman.com/2017/04/06/tips-upgrading-polymer-2-0-imports-hybrid-mode

------------------------------------------------------------------------

I did the step below in the Firebase Console for Polyn so I could run
the app using "polymer serve --open"

Error: This domain (127.0.0.1) is not authorized to run this operation. 
Add it to the OAuth redirect domains list in the 
Firebase console -> Auth section -> Sign in method tab.

------------------------------------------------------------------------

 -- Tool Setup --

sudo npm install npm@latest -g

sudo npm install -g bower

polymer --version
sudo npm i -g polymer-cli

firebase --version
sudo npm install -g firebase-tools

sudo npm install -g lighthouse

To test after firebase deploy do this:
lighthouse https://polyn-3c431.firebaseapp.com/ --view
lighthouse https://vinylrecords.io/ --view

To test locally do this:
polymer serve --open
lighthouse http://127.0.0.1:8081/components/polyn-app/ --view 

------------------------------------------------------------------------

 -- Misc. CLI Commands --

polymer serve --open

-----

One build or multiple builds?

Static hosting services like GitHub Pages and Firebase Hosting don't 
support serving different files to different user agents. If you're 
hosting your application on one of these services, you'll need to serve 
a single build.

If you're serving a single build to all browsers and you need to support 
browsers that don't support ES6, such as IE11 and Safari 9, then this 
build needs to be compiled to ES5:

polymer build --js-compile

!!! But... This doesn't generate a service-worker.js - only "polymer build" does.

-----

polymer serve build/default/ --open
firebase deploy
firebase open hosting:site
firebase deploy --only functions


bower install --save PolymerElements/iron-image
bower install --save polymerfire
bower install --save PolymerElements/neon-animation
bower install --save web-animations-js

bower install --save PolymerElements/iron-signals   ??????

npm install --save redux
npm install --save redux-thunk
bower install --save polymer-redux#polymer-2

npm outdated
npm update
npm install

bower list

cat bower_components/iron-pages/.bower.json

------------------------------------------------------------------------

Fix for missing code in bower_components after build:

https://github.com/Polymer/polymer-cli/issues/347

cp -rn bower_components build/default/
cp -rn node_modules build/default/



"builds": [{
  "bundle": true,
  "addServiceWorker": true,
  "js": {"minify": true},
  "css": {"minify": true},
  "html": {"minify": true}
}],

"builds": [{
    "name": "default",
    "js": {"minify": true},
    "css": {"minify": true},
    "html": {"minify": true},
    "bundle": true,
    "addServiceWorker": true,
    "addPushManifest": true,
    "insertPrefetchLinks": true
  }],
  
------------------------------------------------------------------------

 -- Markup & Code Scraps -- 
    

      :host {
        display: flex;

        /*background-color: lightblue;*/

        /*margin: 0;*/
        /*height: 100vh;*/

        /*height: 100%;*/
      }


      /*.container {
        @apply --layout-flex;
        @apply --layout-vertical;
      }*/

      /*.horizontal-center {
        @apply --layout-flex;
        @apply --layout-horizontal;
        @apply --layout-center-justified;
      }*/



So where this really bites me is that 
`document.querySelector('my-element')` finds nothing, but 
`document.getElementsByTagName('my-element')` does.

    <firebase-query
        id="query"
        app-name="polyn-app"
        path="/users/[[user.uid]]/chats"
        data="{{chats}}">
    </firebase-query>

    <app-indexeddb-mirror
        session="[[user.uid]]"
        key="chats"
        data="{{chats}}"
        persisted-data="{{persistedChats}}">
    </app-indexeddb-mirror>

    <dom-repeat items="[[persistedChats]]" as="chat">
        <template>
            <div class="card" on-tap="_onTappedCard">
                <p>[[chat.subject]]</p>
                <!--<p>buyer: [[chat.buyer]]</p>-->
                <p>Seller: [[chat.seller]]</p>
                <!--<p>chatId: [[chat.chatId]]</p>-->
            </div>
        </template>
    </dom-repeat>


    
  <div class="card">
    <div class="circle">3</div>
    <h1>Messages</h1>
    <p>Modus commodo minimum eum te, vero utinam assueverit per eu.</p>
    <p>Ea duis bonorum nec, falli paulo aliquid ei eum.Has at minim mucius aliquam, est id tempor laoreet.Pro saepe pertinax ei, ad pri animal labores suscipiantur.</p>
  </div>



  // Delay the alert for 1 second.
  setTimeout(function() {
    alert("You typed: '" + this.someInputValue + "'")
  }, 1000);


setTimeout(expression, timeout); runs the code/function once after the timeout.

setInterval(expression, timeout); runs the code/function in intervals, with the length of the timeout between them.

Example:

var intervalID = setInterval(alert, 1000); // Will alert every second.
// clearInterval(intervalID); // Will clear the timer.

setTimeout(alert, 1000); // Will alert once, after a second.

------------------------------------------------------------------------
